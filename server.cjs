const express = require('express');
const fs = require('fs').promises;
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware для обработки JSON-тел запросов
app.use(express.json());

// Middleware для логирования запросов (опционально, но полезно для отладки)
app.use((req, res, next) => {
    console.log(`[${new Date().toISOString()}] ${req.method} ${req.url}`);
    next();
});

// Подача статических файлов из корневой директории (где лежат index.html, css, js)
app.use(express.static(path.join(__dirname, '')));

const DATA_DIR = path.join(__dirname, 'data');
const USERS_FILE = path.join(DATA_DIR, 'users.json');
const TASKS_FILE = path.join(DATA_DIR, 'tasks.json');

// Вспомогательная функция для чтения JSON файла
async function readJsonFile(filePath) {
    try {
        const data = await fs.readFile(filePath, 'utf-8');
        return JSON.parse(data);
    } catch (error) {
        // Если файл не найден или пуст, возвращаем пустой массив
        if (error.code === 'ENOENT') {
            return [];
        }
        throw error;
    }
}

// Вспомогательная функция для записи в JSON файл
async function writeJsonFile(filePath, data) {
    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');
}

// Получить всех пользователей
app.get('/api/users', async (req, res) => {
    try {
        const users = await readJsonFile(USERS_FILE);
        res.json(users);
    } catch (error) {
        console.error('Error reading users file:', error);
        res.status(500).json({ message: 'Ошибка на сервере при чтении пользователей' });
    }
});

// Добавить нового пользователя
app.post('/api/users', async (req, res) => {
    try {
        const { username, password, role, fullName, email } = req.body;

        // Валидация обязательных полей
        if (!username || !password || !role || !fullName || !email) {
            return res.status(400).json({ message: 'Все поля (username, password, role, fullName, email) обязательны.' });
        }

        const users = await readJsonFile(USERS_FILE);
        const newUser = {
            id: Date.now().toString(), // Простой генератор ID
            username,
            password, // В реальном приложении пароль должен быть хеширован!
            role,
            fullName,
            email,
            createdAt: new Date().toISOString(),
        };

        users.push(newUser);
        await writeJsonFile(USERS_FILE, users);
        res.status(201).json(newUser);
    } catch (error) {
        console.error('Error writing users file:', error);
        res.status(500).json({ message: 'Ошибка на сервере при сохранении пользователя' });
    }
});

// Получить все задачи
app.get('/api/tasks', async (req, res) => {
    try {
        const tasks = await readJsonFile(TASKS_FILE);
        res.json(tasks);
    } catch (error) {
        console.error('Error reading tasks file:', error);
        res.status(500).json({ message: 'Ошибка на сервере при чтении задач' });
    }
});

// Добавить новую задачу
app.post('/api/tasks', async (req, res) => {
    try {
        const { title, description, required, order } = req.body;

        // Валидация обязательных полей
        if (title === undefined || description === undefined || required === undefined || order === undefined) {
            return res.status(400).json({ message: 'Все поля (title, description, required, order) обязательны.' });
        }

        const tasks = await readJsonFile(TASKS_FILE);
        const newTask = {
            id: Date.now().toString(), // Простой генератор ID
            title,
            description,
            required,
            order,
        };
        tasks.push(newTask);
        await writeJsonFile(TASKS_FILE, tasks);
        res.status(201).json(newTask);
    } catch (error) {
        console.error('Error writing tasks file:', error);
        res.status(500).json({ message: 'Ошибка на сервере при сохранении задачи' });
    }
});

app.listen(PORT, '0.0.0.0', () => {
    console.log(`Server is running on http://0.0.0.0:${PORT}`);
});
